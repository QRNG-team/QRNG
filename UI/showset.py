# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'showset.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtCore import QThread, pyqtSignal
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *


class Ui_showwin(QDialog):
    signal = pyqtSignal(int, dict)

    def __init__(self):
        super(Ui_showwin, self).__init__()
        self.setupUi(self)
        self.isplt = 0
        self.noshow.toggled.connect(self.change)  # 信号：当状态改变时。连接信号和槽
        self.followextract.toggled.connect(self.change)  # 信号：当状态改变时。连接信号和槽
        self.custom.toggled.connect(self.change)  # 信号：当状态改变时。连接信号和槽
        self.showpaths = {"input_before": None, "input_after": None, "output": None}
        self.beforefile.clicked.connect(self.input_beforefile)
        self.afterfile.clicked.connect(self.input_afterfile)
        self.outputposition.clicked.connect(self.output_file)

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(558, 534)
        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(60, 30, 251, 141))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.noshow = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(12)
        self.noshow.setFont(font)
        self.noshow.setObjectName("noshow")
        self.verticalLayout.addWidget(self.noshow)
        self.followextract = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(12)
        self.followextract.setFont(font)
        self.followextract.setObjectName("followextract")
        self.verticalLayout.addWidget(self.followextract)
        self.custom = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(12)
        self.custom.setFont(font)
        self.custom.setObjectName("custom")
        self.verticalLayout.addWidget(self.custom)
        self.horizontalLayoutWidget = QtWidgets.QWidget(Form)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(50, 290, 444, 73))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.afterfile = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.afterfile.setObjectName("afterfile")
        self.horizontalLayout_2.addWidget(self.afterfile)
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.horizontalLayoutWidget)
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.horizontalLayout_2.addWidget(self.textBrowser_3)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(Form)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(50, 210, 444, 73))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.beforefile = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.beforefile.setObjectName("beforefile")
        self.horizontalLayout.addWidget(self.beforefile)
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.horizontalLayoutWidget_2)
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.horizontalLayout.addWidget(self.textBrowser_4)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(Form)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(50, 370, 444, 73))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.outputposition = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.outputposition.setObjectName("outputposition")
        self.horizontalLayout_3.addWidget(self.outputposition)
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.horizontalLayoutWidget_3)
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.horizontalLayout_3.addWidget(self.textBrowser_5)
        self.buttonBox = QtWidgets.QDialogButtonBox(Form)
        self.buttonBox.setGeometry(QtCore.QRect(370, 470, 156, 23))
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel | QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.beforefile.setFont(font)
        self.afterfile.setFont(font)
        self.outputposition.setFont(font)
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.textBrowser_3.setFont(font)
        self.textBrowser_4.setFont(font)
        self.textBrowser_5.setFont(font)
        self.beforefile.hide()
        self.afterfile.hide()
        self.outputposition.hide()
        self.textBrowser_5.hide()
        self.textBrowser_4.hide()
        self.textBrowser_3.hide()
        self.buttonBox.accepted.connect(self.acceptwin)
        self.buttonBox.rejected.connect(self.rejectwin)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "展示设置"))
        self.noshow.setText(_translate("Form", "不输出随机数分布图"))
        self.followextract.setText(_translate("Form", "随提取过程输出随机数分布图"))
        self.custom.setText(_translate("Form", "自定义输出随机数分布图"))
        self.afterfile.setText(_translate("Form", "请选择提取后随机数文件"))
        self.beforefile.setText(_translate("Form", "请选择提取前随机数文件"))
        self.outputposition.setText(_translate("Form", "请选择图像输出位置"))

    def change(self):
        if self.noshow.isChecked():  # NIST检测是否选中
            self.isplt = 0
            self.beforefile.hide()
            self.afterfile.hide()
            self.outputposition.hide()
            self.textBrowser_5.hide()
            self.textBrowser_4.hide()
            self.textBrowser_3.hide()
        elif self.followextract.isChecked():
            self.isplt = 1
            self.beforefile.hide()
            self.afterfile.hide()
            self.outputposition.hide()
            self.textBrowser_5.hide()
            self.textBrowser_4.hide()
            self.textBrowser_3.hide()
        elif self.custom.isChecked():
            self.isplt = 2
            self.beforefile.show()
            self.afterfile.show()
            self.outputposition.show()
            self.textBrowser_5.show()
            self.textBrowser_4.show()
            self.textBrowser_3.show()

    def input_beforefile(self):
        fname,filetype = QtWidgets.QFileDialog.getOpenFileName(None, 'open', '.\\', "Images (*.png *.csv *txt *.jpg)")
        self.showpaths["input_beforefile"] = fname
        self.textBrowser_4.setText(fname)

    def input_afterfile(self):
        fname, filetype = QtWidgets.QFileDialog.getOpenFileName(None, 'open', '.\\', "Images (*.png *.csv *txt *.jpg)")
        self.showpaths["input_afterfile"] = fname
        self.textBrowser_3.setText(fname)

    def output_file(self):
        fname = QtWidgets.QFileDialog.getExistingDirectory()
        self.showpaths["output_file"] = fname
        self.textBrowser_5.setText(fname)

    def acceptwin(self):
        self.signal.emit(self.isplt, self.showpaths)
        self.accept()

    def rejectwin(self):
        self.reject()
